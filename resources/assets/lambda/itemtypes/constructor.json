{
  code: "constructor",
  variantgroups: [
    {
      code: "constructs", states: ["unit", "nat", "sum", "prod", "list"]
    },
    {
      code: "unit", combine: "SelectiveMultiply", onVariant: "constructs",
      states: ["tt"]
    },
    {
      code: "nat", combine: "SelectiveMultiply", onVariant: "constructs",
      states: ["o", "s"]
    },
    {
      code: "sum", combine: "SelectiveMultiply", onVariant: "constructs",
      states: ["inl", "inr"]
    },
    {
      code: "prod", combine: "SelectiveMultiply", onVariant: "constructs",
      states: ["pair"]
    },
    {
      code: "list", combine: "SelectiveMultiply", onVariant: "constructs",
      states: ["nil", "cons"]
    },
  ],
  creativeinventory: { "general": ["*"], "terms": ["*"]},
  maxStackSize: 64,
  shape: { base: "item/term" },
  guiTransform: {
    translation: { x: 3, y: 0, z: 0 },
    rotation: { x: 9, y: 39, z: -41 },
    origin: { x: 0.5, y: 0.2, z: 0.5 },
    scale: 3
  },
  behaviors: [
    {
      name: "Term",
      properties: {
        "constructs": "{constructs}",
        "termByType": {
          "*-unit-*": "{unit}",
          "*-nat-o": "0",
          "*-nat-s": "S",
          "*-sum-inl": "inl",
          "*-sum-inr": "inr",
          "*-prod-pair": "pair",
          "*-list-nil": "nil",
          "*-list-cons": "cons",
        },
        "typeByType": {
          "*-unit-tt": "unit",
          "*-nat-S": "nat -> nat",
          "*-nat-O": "nat",
          "*-sum-inl": "?A -> ?A + ?B",
          "*-sum-inr": "?B -> ?A + ?B",
          "*-prod-pair": "?A -> ?B -> ?A * ?B)",
          "*-list-nil": "list ?A",
          "*-list-cons": "?A -> list ?A -> list ?A",
        },
        importsByType: {
          "*-list-*": [ "Coq.Lists.List" ],
          "*": []
        },
        "isType": false,
        "isTypeFamily": false
      }
    }
  ],
  combustibleProps: {
    meltingPoint: 200,
    meltingDuration: 15,
    smeltedRatio: 1,
    smeltingType: "cook",
    smeltedStack: { type: "item", code: "denaturedterm" },
    requiresContainer: false
  }
}
